apply plugin: 'com.android.library'

//File name for out put jar created
def jarFileName

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['resources']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']

            androidTest {
                java.srcDirs = ['androidTest']
            }
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.android.support:support-annotations:22.2.0'
    implementation 'com.crashlytics.sdk.android:answers-shim:0.0.6'

    // --- optional dependencies -----
    //Please note that the Branch SDK does not require any of the below optional dependencies to operate. This dependency is listed here so there will not be build errors,
    // but the library is *not* added to your app unless you do so yourself. Please check the code in gradle-mvn-push script to see how this works

    implementation 'com.google.firebase:firebase-appindexing:10.0.1'
    implementation 'com.android.installreferrer:installreferrer:1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

//------------- Jar Generation code. ---------------//
//Run makeJar to create a jar file for SDK to the route directory
task clearJar(type: Delete) {
    delete 'build/libs/'+ jarFileName
}

task makeJar(type: Copy) {
    from('build/intermediates/intermediate-jars/release/')
    into('../')
    include('classes.jar')
    rename ('classes.jar', 'Branch-'+project.VERSION_NAME+'.jar')
}

makeJar.dependsOn(clearJar, build)

apply from: 'https://raw.githubusercontent.com/BranchMetrics/GradleToMavenOptionalDependencies/master/gradle-maven-push.gradle'
