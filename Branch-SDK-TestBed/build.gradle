apply plugin: 'com.android.application'

dependencies {
    compile project(':Branch-SDK')
    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.+'
    compile ('com.google.android.gms:play-services:9.0.0')

    androidTestCompile 'com.android.support:support-annotations:23.3.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

    //--- Instrumentation test dependencies ----- //
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2'
}

android {
    compileSdkVersion 23
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    
    defaultConfig {
        applicationId "io.branch.branchandroiddemo"
        minSdkVersion 15
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs { release }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled = true
        }
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
        android.buildTypes.release.signingConfig = null
}




